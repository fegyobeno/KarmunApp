<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwgHBgoICAgLCgoLDhgQDg0NDh0VFhEYIx8lJCIfIiEm
        KzcvJik0KSEiMEExNDk7Pj4+JS5ESUM8SDc9Pjv/2wBDAQoLCw4NDhwQEBw7KCIoOzs7Ozs7Ozs7Ozs7
        Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozv/wAARCACPAJsDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2aiiigAooooAKKKKAOQ+J08tv4S3wyvG32mMbkOD1NZ2oX2qm
        WGDX5rjTdIaNds9hlhJx0kk6r+QroPGusNoegfbEtobg+cibJhlee9U7Lxjbx2t5B4gijsrq0Te8XVZk
        PQpnrnpitE3y7Aa9vc6RpGifaoriJLGNd3mh9wYfXua5lbXWPHDSaj9suNJsY/8AkHohwzt/z0f29qit
        PFV7JqC6fdaLaW1vNayXccJX5sKpK7h0ycV0PgzXJvEOgrfTwRQt5jJsi6ADFKzirgQeHPEc1xcvousp
        9n1e3HzL/DOv99f8K5PR3M9zr9xcadd6qLa7KqkM7KyLz0Gefwro73xHJH4yuNLNlbuLa0adJmX58hc4
        z6VV8PeNg9rFdavpiWFveMfLvIV/dFgcYfupz3NNJpN2EJ4La4vdXmvba/EWnbCp057l5nRvUhuVruq5
        n+2gvjyHSYbW2MU9qZ/tCj5yfqOorpqmV7jCiiipAKKKKACiiigAoopksqQRPLK4REUszE4AA6mgB1Z+
        r69puh2wn1C5WFW+6vVn+g6muRPjKXWbq9u7eRrfRNLXfJIvD3L/AMKg9gT+OK47TrHVfHviVpbiRzGW
        3TS/wwp/dHv6CtY0+stEB6Z4f8VTeJrhpLHTJIrCM4a4ncAsfRVGc/nXSVWsLG202yis7SIRwxLtVRVm
        s3a+gHP+NbXS73QvI1e9eztjMp81Ou4dB0NZl9rPgbUZrOe8vLeWSzIMTMrdvXjkd8U34q/8imv/AF8p
        /WvIABjpXRSpc8b3E2etXOqeDbrxCutSa2DIsDQGLB2FSCD2z3qtZ3vhnSUaHSPF81lAzFvJ2iRQT6bl
        yK8u2qOwo2j0Fa/V13Fc9Tt7vwXFeXN9N4ge6vbmJoWuJicqpGOAFAFW9H1rwZo+hLo41eK5thuyJ0J3
        AnPIxivIcD0H5UbR6Cj6vfqK56z4dtPCY8Ux3ej6tJLOI3WO1ySiqeoGRkD2zXcJIki7kYMPUGvF/hwA
        PGltgD/Vyfyr0fw09odT1Jbe1aNg/wA8xlLeacnPHRcGuarDlla5SNbV7q9srJrixs1u3j5aEybGYf7P
        ByfasbQvH2ja3KLcs9ndE7RDcAKWPoD0z7da6YgEc15p8RfBxVm13TIj63UaDkf7YA/X86mCi3ZjPSwc
        0V5Z4f8AE+r3uhSNa3bPqGlLv8uT5hdQdwR/eHr1ru/DPiW08TaaLq3HlyJ8s0JOSh/w9DRKDjuBs0UU
        VACdq8++IniVJvDgt7F22XFy8DuOjBMbse2SB+ddT4s1NtH8NXt4hxIse2M/7TcD+deTawB/wg/h454M
        lxu9c5Ga2pQvJMTNSKwgt/AunQ3t4tnaXsrXVy+MySY4VFXqTxnPQcVs+CbltW1VY9KtTYaJp4LbQfmn
        kIwC57nvjtxXMadod54lxqmqXBstMhCxJIf7o4CRjvXr+laXZ6RYR2djAIYUHA7k+p9TVVGkrdQLtFFF
        c4zjPimrN4TUKpY/aU4H414/g9Ohr2r4g3503w+lwIUmHnqpR1DAg59Qa88/tHw7qv8Ax92jWkrH78R4
        /I54+hFdNKpKMdroPc2bscxiiujm8JGdPN0m7jvEIyEBw/5Hr+Gawbi2ntXKTxMjA4IIxXRCtCelwdN2
        utURUUZFFamZ1Hw5/wCR0tv+ub/yr0vQJbiTVdQEloYkRtvmeWqiRsnPI69e/rXmvw4/5HS2/wCucn8q
        9L8PxT2uqapaySWzqZBKBCG3KW/vk8biADXDiPiLWxv1heLl1BNGN7pTkXVm3mhOokUfeUjuMfyrdpCM
        1zoZ5LoN3pN34gttS0tVsbuRvLutPc4jmVuGMbHj32moPDMsvhr4jyaarExSTtbMMY3An5T/ACrX8YeB
        bW51CR9FdYr5k85rMnaJBnlk989v5VyelXN3eeNNLe93fa0uYo5GcYZipwN3vjA/CuyNpJ27CPbNN1K3
        1S0FzbMSu4qQeqsDgg/iKt1594E1PZ4r13SS37t53niHoQ2D/T8q9BrllHldhnE/FWRl8LRovR7lQfwB
        P9K5nTLGwuvBem3+rzbbDT7icyRr96ZiV2oPrg1ueKrlvEPh3X4gAW0q7GxR12gDJ/Vvyrz+2N7rFvYa
        DZIzkSu+3PBZv4j7ACuimrwt5iOw8MT3njTxPHd3Maw6ZpeGhtkGI0P8I9z3/CvRtSsjqFhLardT2pkG
        PNt2Cuv0JBxWX4PsLDTNHNjYv5v2eVo55sf6yUY3H6c4/CotY8daJoeotYXkkvnIoLbI9wGeawl70vdG
        QDwbf2qlrHxZqyy/wm5cTKP+A4FZ1zH8RNJkaWK6tdXiH8PlKrfkMfzNakPxF8LTYxqWwns8LjH6VkeI
        /Gb6jd22jeGb2Lzbr/WXe7iMegPY+tNKV9hGLrfiC/8AEulHSNSt4LG5SQSMx3gjHQFNpOP9oZArk59D
        1CFWkSJbmMDl4GDgfXHI/EV3HiTQY/Cfh9dVsr64m1RpVja9aQliD1GOmDisCLxre3MiNe3U1vcJwl3A
        oYA/7UZ4P4Y/Gt6bkleGwHN291PayboJGjI9Dxn3Fb9v4ojuolt9at1uUHAk/jH/AALr/Me1Wb68kuUW
        XXNEiv4pQfL1KwBjdvUkgYJ/2WArMOgLfK8uhXP24INz20i+XPGM/wB3o31X8qpqnP4lZi1TunYt3fhm
        G8i+1aJP9oj+8YW++Pw7/h+QrnZI2hco6lWHY1LBd3em3BMTPBIp+ZTwQfcV0cWpab4ijFvqaCC8/guF
        H3j7jv8Az+tSnUo76xL51LSej7/5jfhwf+K0tR/0zk/9Br0/Q3VdU1KGESLbmTzFWRRyxJDMpzyuR35H
        0rgPB+jXOj+OLQTAGN45CkinKsMdQe9d3oUF3b6zfpd+cBjMAeRGXYWPTaARz65+tZVZqcroHFx0Z0FF
        FFYiOU8f6VcXejrqNgzpfac3mxvHw23+ID+f4Vy+g3dn4x1bT7uby7bW7KZJHZRhLuMHn/gQH+fT1Fhl
        SMA57GvGNd04aDqtt4i0ZmOnzTb4yBzE4PzRn8jW9OzXL1ESeC53/wCFk7gf9bLOD9PmP9K9lrx74eQL
        P4mvtVI2Q2kMkuW/hLE4/TNem+HdUOr+H7PUJMB549zD3zg/yor/ABAjz3RdUgsfiFrWk30ipb6jNJE+
        9sDcSdv5g4/GoLcL4F8P3l3LtXVryV7a1DdUjUkFx+WfyqP4kacbfXYtatSGt70AiROgkXjr+ANUfEF9
        L4s8S2MUZLNLDDEo9GIy36k/lWiV7NbdfkB6X8P7f7P4MsWIO+cNKxP8RZic/litt9OspZGkltIJHbqz
        Rgk03TpLY25t7UgpaHyDjsVA4rA1vxudL1STTLXRr2+uYwpPlr8pBGRgjJ/SubWUtBm4+iaTJ9/TLRvr
        Cp/pXnenaFo978SdX0u/tIfJWPdDAvyADjkAY7VujU/HupH/AEbR7PT4yOty5Y/of6VzviPTvEeiajae
        Ib/UY1llYQzT2sf+qU/Uc8VpBNNq4jQ8Y6BpnhjRVvbWJ5YTKsZtLiZmhwe+M5BHY5rA8My+Hrq9vL1b
        BoJtPtmmEXm+dHu6Z2nB4znGa3vFWnzaLokerS6pLrBaRVSK8AeAhv4tg7+hzXLWfjK5s7yOdNM0yNQc
        SCK1VC6H7y568irhGTjoA6XxHrcM/wBvt/EkN4qnlRNtHPYxHH04B+tLceJC7G8mEE5HyzWtwNs0WRzs
        cYLD2OSP1pdekS1lS7tdM0+5067O62lEG0j1RtpGGHSn2K3MVuJbvSorC0Y5w9wYkb3Cybsn3AzVNaXs
        BPJLpOsTfZrm4Fym0GO4kYLPHHjO4SfdlAGchsHg4rnNQ00WYM1peRXtr1E0R5XnA3L1U5HevQXt9A1r
        RPMWUwTvGybkODKu4FtpK5wSBzj145rBtbkaTLEkdhPLHAwZJo7kSSRD1ACqSh7gjBqYTa2Am+HGvy3O
        uwabJKs0ZDOpyCVIFdp4Xu4J9f1qOJYQVkGdrszDk8NknH0GBXKWWpaLputwa7PELScffW2XMNyj8ean
        oR/EtenWs8F1bpcW7pJFINyuhyGFZTte6QJWJqKKKzGIa8qs7y0tvE2teEtTYJYX07iEuf8AVOeVIz65
        H6V6rXkPxKgjfU7PXLM5iu48Bx/fQ/z6flWtJJuwD5Cvg/wHeWtw6xahqdy8CqxwxRTtJx6Yz/30K7Dw
        JEzeC9NZeVZGII9C7V534lvrjxZ4ktIbbMrtDFEg/wBogFj+ZP5V63ZXWl6TZQaf9shT7MgjI3YwQMGr
        qaRV92I4jTZrW7u9V8Ea0dq/aHaykPVSSSAPfnI/EVQ8G6DLpHjmeLUFAOnQPLu7MOgYe2DWj8T/AA9K
        ssfiGzBBUBLgp1XH3X/p+VO8N+JY/EGl3tveKBrEVjJFHN3nTGfzFO75LrZgW/hlqr6g+siQ8vdfaFGe
        AGzn+Vd5gZzjmvKfhFIV1e+jP8dup/Jv/r16vWVVWm0MKq6lp9vqunzWN0geGZSrA9vce4q1WRr/AIl0
        3w7bebey/Ow/dwpy8h9h/Ws15Aeaa9/amnaNP4TvIpJ/ssgntZ1Gd0IJzn6Z/DpWbZ+EpUtVv9cuk0qy
        IyvmDMsvsqdfzrp73xF4ihWLxXe2EMFmh8q2tJPvMH6knr0H/wBasXxRp7a2jeJdLuJr21f/AF8TndJa
        H0I/u12QlJabCFsfGGn6JItppWmMdP37pnuJN00h6B1/hQj2qG98MXOsXcd7pN++p2dzIFaWVsy2+f8A
        noO2PXpXLgium0mafw14dm1uNzHeX7fZ7QEZGwHLvj8MCrlDk1juIQXYvfEM1np7MIIrV7e0K8EeWN4Y
        fVlz+NQvdrLaRX4Rjas+2dIjh7WXrujPYN1x06j0NaOh6xpGp6/YyXuntZ6g0ygT2eBHKTxh0PTjuKjt
        NEjstRuIo9W066s5maC4h8/ypAmeu1scqeRz2qHZPVDHR6pe2USb7Wz1Szclo7uRMfKcB1fHQ4Iznnoe
        a0dF1e68J63JY+TcLZyHzPsUvzMoPUxt0bHXjqPQ1nw+D9TiMulRaxaeZduNtsku4ug58xvQY59812Fy
        E8R+GrmwlhNtrGlpwn8cTqPlZW7q2ODWcnHZAdfaXcF7bR3NtIssMi7kdTwRU1eXeG9d1Dw41pdagm7R
        tUAbz0GFjkPUkfw89R0PUd69PVg6hlIIIyCD1rGUbMZU1i6Flo15dEkeVA7AjscV5ZEw1b4TTLKQ02mX
        W4Hvhj/9kfyr0HxxJ5Xg3U29Ydv5kCuD8DXVjYeGdZu9VUPZiWPEZ/5aOOQB69q1pq0XLzET6DZ2/gjQ
        G8Q6kgOo3KbbOA9VBHH59T6Ctbw34bl1XQbbULyQtPdb5XJ6nc5I/TFchCdS+IXiuNZiVizlgv3YIgec
        e5/U17TDDHbwJDEu2ONQqgdgOlOo3HfcCtq8yW2lXM01ubmJIyZIgMll78d+K8r1LwrNamLxD4SnN5ZZ
        8xVj5kh9sdx7da9gIDKVIBBGCD3ryvXdO1fwDqz6nozt/Z07bmQ8oh/usPT0NRSbTsgZU+GNxjxfMuAn
        nwPwOxyDj+deg+FfEa65bzwzfJfWcrRzx9OhIDD2IrkdH13w9rut2mosBo+rxvgsOYrjPUE+pH4/Ws3W
        bm48HfEea+jDCCd/NIzxJG33h+Bz+QrSceeT0swO+8Xa3qOj2cS6Xp0l1c3LeXGwGVRvcev6cVneHfBL
        R3P9r+IZft2pud2HO5Yj/U/oO1ddDLHNEksbBldQyn1BHFSVzptKwzkfiRY3V/4ZWCzt5biUXCNsjUsc
        DOTxXnGlWXizRb4XVhpV9G3RlNuxVx6MMcivdKDwK0jUcY8thWPIb3Q9N1RRe3VtP4buC4EyTxMLeTJ5
        2N2PXis7Xxc+INWaPR7KWexsVFvbrCpYBR349TzXYtIPHHjcRqQ+kaOdx54lk/8A1/oPetvVPA+lX8/2
        u2MmnXgORPaNsOfcdKtVHFq4HlmnaHrNhqlpd3Gl3cMMEyyPI8LBVUHJJ47UmraHql9q95d2OmXVzazT
        s8UscLMrqTkEHuK7nWbTxnpWi3iPqFrqdj5LB2lTbKqY5Puce9QaJ4h8U2GgWEFt4X+0wCFfKlWb769j
        gdKv2kvi0Ar+EIZYb/SpdXt5bK7tWe2iNxGV8+NlJUAkclTn8CK6LxvGunWyeIbaeO3vLUbMOcC4Q9Yz
        6+orC1u68Za/p4B8OJapbuJ1lMo3oy85GSP5Vd8OeH38SLa+Idd1E6iWG+G3AxHGc9x3Pt/OsXvzMDS8
        Gada3fgG0tLlUuIZ42LqeQMk8fhW1bQ2fh3RViMrJaWcZ+eVskKPU03SdGttFF0LYsEuZ2mKE/KhPUKO
        wrhfinrzl4tCt2OCBLPjv/dX+v5VMVzysMn17xBJrPw5vr908qO4u/KgQ9dgYYz78E1xuiaJrHiSGKws
        ottpDIXeVsiNWPVie5xgYFdrf2Gj6T4T0ay1+6aKG3XzWs05knkPOOOwJP8AjWBc+J9X8TzR6D4dtBYW
        jcLFFwdvcsw6D/PNbwbSfKI7bwbb6Ppj3Ol6SxupIADd3YHDOf4c+w7DpXV1keGtAg8OaPHYw4Z/vSyY
        ++56n/CteuaTu7jCo5oY7iFoZo1kjcYZGGQR6EVJRSA8v8Q/Di3mvJRoFzEk6je9jI/IB7qfQ+/51zur
        WXiSLTEsdY0y5lW05gnKljEO67hkFfbtXqvibwxDr9ujxzNa31vk29zGSGQ+hx2rgrzWPH3hgiO8d5oY
        +FkeMSIw92xn8zmumnOTEWdH1e8vvBkc+lzldW0QYaLGfOg9CvcY/UV0nhXx7Y+IClrcAWt8R/qyflk/
        3T/SuHg+JN9Hei8l0jTXuAu3zViKPt9N2elY2s6rp+qXRvbLTX065ZtzCKbcjN6gYBB+lP2Tbd0Fz32u
        T+IGvzaXpSWFkGN7qBMUe0fdHQn684H1rG8K+LvExhSC90S71CIdLhEKvj3zwfrxXZXGvaTaxI2oXcFq
        5G7yppF3r+ANYcrjLuMg8J6Anh7QobTAMzDfO3q56/l0rbrCi8aeHJpRHHqsLMTgAZ5/StoTRMMiRSPr
        Uu99QMPxzP8AZ/BepuO8Oz/vogf1q54cjMPhvToz1W2T/wBBFVfEV/4da0NhrlzGIZcMYyzDdg5H3e2R
        TrPxX4blVIbfVrQBQFVS+3jsBmnrYDaIB61hNLo3gjRnLyGGDzGcITuZ2Y5IUf0qHX/Emp2EbDS9CuL7
        j5Z1IMf1+Ukn9K8l1TVL7U9YE/iEXLlf+WK/u9o9BkcD8KunT5t9hHdaX4nu/FOqS3lz/oWhacDLIuf9
        Yw+6GPf1wK44X9/q/ie51i002S9mMpeJBGWEZ6KSB1wAOKvt4+hh0xNNs/DtilmhBWKcmUE+p6ZP1p0P
        jzxZqDrbaZBFGegS0tc4/PNbRg43aQDo/BWvarcvqPiC5FlGfnlmuHBfHsO36V6Z4f0DTdBsVi0+IAOA
        WlblpPcmub0Dwlq1/exat4su5LiSNg8Noz5VG9SBwPoK7kDArGpNvQYtFFFZAFFFFABUc4kMLiIqHx8u
        8ZGfepKKAPONX8SRaVdeV4g8GW7P089ArJJ7glf0zVA/ErT7RSNL8NW8DfwsSq4+oA/rXqU0MU8ZjmjW
        RD1VxkH8KypfCPh6Ztz6PaZ9owP5VrGUftIDya/8a+JNdk8hbp41c/LBaLtz7ZHJ/Op7TwVJb251LxNd
        LploeSjHM0vsF7H9favXbPR9O0xT9gsbe2OOscYBP1NcRD4L1XXPE8934nnWS3hfEccb/K4PIAH8I9e5
        rRVV00QrFLR47/Wlaz8Kaeui6WPlkvpF3Syj/e659gePWuu07wLoljZywSwNdyTj99NOxLOfX2/Cuggg
        itoEhhjWONBhVQYAHsKkrCUr7DOA1HwtrPh1ZJvDsv26wPMumXQ8wEdwuev8/rXM/wBj6H4pZhpJXSNV
        532E5/due+w9vp+leyVyPjLwRBrcLX9gBb6lGNysp2iTHY+/oauFSz1Eebb/ABN4OutgkurHngZzG/vj
        7prds/ilebBFqumW16uMEj5Sfc5BH8q77w3Z6lJ4dig8RCG5mI6MA/y9gx6E1I3hDw677zo9rn2jAH5V
        bqRfxIDhI/G2gXEipa+DYZrhuirGhyfbC5rvfD7ahJaGW+0+305Wx5VtFyyD/aPAz7Y4q5Z6XYafn7HZ
        QW+Rg+VGFz+VWqxk09hi0UUVIBRRRQB//9k=
</value>
  </data>
</root>